---
import Layout from "@/layouts/ProfileLayout.astro";
import { supabase } from "@/db/supabase";
import Trash from "@/icons/Trash.astro";
import Edit from "@/icons/Edit.astro";

const { cookies, redirect } = Astro;

const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");

if (!accessToken || !refreshToken) {
  return redirect("/login");
}

// Set the session with the cookies
const { data: dataAuth, error: errorAuth } = await supabase.auth.setSession({
  refresh_token: refreshToken.value,
  access_token: accessToken.value,
});

// If there is an error, delete the cookies and redirect to login
if (errorAuth) {
  cookies.delete("sb-access-token", {
    path: "/",
  });
  cookies.delete("sb-refresh-token", {
    path: "/",
  });

  return redirect("/login");
}

const id = dataAuth?.user?.id || "";

const { data: userData } = await supabase
  .from("profiles")
  .select("roleesp")
  .eq("id", id)
  .single();

if (userData?.roleesp !== 1) {
  return redirect("/index");
}

const { data: carsData } = await supabase
  .from("car")
  .select(
    "id, carbrand!inner(name), model, year, carclass!inner(short_name, class_design)"
  )
  .order("id", { ascending: true });

const { data: carBrandsData } = await supabase
  .from("carbrand")
  .select("id, name")
  .order("name", { ascending: true });

const { data: carClassesData } = await supabase
  .from("carclass")
  .select("id, name")
  .order("name", { ascending: true });

const carDataOrderer = carsData?.sort((a, b) => {
  const brandComparison = (a.carbrand?.name ?? '').localeCompare(b.carbrand?.name ?? '');
  if (brandComparison === 0) {
    return (a.model ?? '').localeCompare(b.model ?? '');
  }
  return brandComparison;
});
---

<Layout title="ESP Racing:  Administrar Carreras">
  <h2 class="text-5xl font-extrabold border-b-2 border-primary w-full">
    Administración de Coches del Sistema
  </h2>

  <div class="py-4 mx-auto text-center" style="width: 99%">
    <p class="text-5xl font-bold border-b border-primary w-fit mx-auto">
      Lista de Coches del Sistema
    </p>
    <table class="mt-6 w-full border-collapse border border-light-primary">
      <thead class="font-medium bg-primary">
        <tr>
          <th>Nº</th>
          <th>Nombre</th>
          <th>Año</th>
          <th>Clase</th>
          <th>Editar</th>
          <th>Eliminar</th>
        </tr>
      </thead>
      <tbody>
        {
          carDataOrderer?.map((car, index) => (
            <tr>
              <td class="font-semibold">{index + 1}</td>
              <td>
                {car.carbrand?.name} {car.model}
              </td>
              <td>{car.year}</td>
              <td class = 'text-sm font-bold'>{car.carclass.short_name}
              </td>
              <td>
                <a href={`/admin/cars/${car.id}`}>
                  <Edit moreClass="w-6 text-center mx-auto" />
                </a>
              </td>
              <td>
                <button class="align-middle delete-car" data-id={car.id}>
                  <Trash moreClass="w-6 text-center mx-auto" />
                </button>
              </td>
            </tr>
          ))
        }
      </tbody>
    </table>
  </div>

  <div class="py-4 mx-auto text-center" style="width: 99%">
    <p class="text-5xl font-bold border-b border-primary w-fit mx-auto">
      Añadir nuevo Coche
    </p>

    <div
      class="box-border p-5 m-auto bg-dark-primary rounded-md max-w-screen-2xl border border-primary"
    >
      <form id="uploadForm" data-astro-reload>
        <label class="text-light-primary text-lg font-medium" for="filenameCarName">
          Nombre de la carpeta del coche
        </label>
        <input
          class="w-full p-3 border border-solid border-light-second rounded-md mt-2 mb-4 resize-y text-white bg-dark-second hover:border-primary"
          type="text"
          id="filenameCarName"
          name="filenameCarName"
          placeholder="ks_generic_car"
        />

        <label class="text-light-primary text-lg font-medium" for="carbrand">
          Marca del coche
        </label>
        <select
          class="w-full p-3 border border-solid border-light-second rounded-md mt-2 mb-4 resize-y text-white bg-dark-second hover:border-primary"
          id="carbrand"
          name="carbrand"
        >
          {
            carBrandsData?.map((carBrand) => (
              <option value={carBrand.id}>{carBrand.name}</option>
            ))
          }
          <option value="new">Añadir nueva marca</option>
        </select>

        <!-- Nueva Marca de Coche -->
        <div id="newBrandContainer" class="hidden">
          <div
            class="grid grid-cols-1 gap-4 bg-dark-second px-2 pt-2 border border-primary rounded-xl sm:grid-cols-2"
          >
            <div>
              <label
                class="text-light-primary text-lg font-medium"
                for="newBrandCar"
              >
                Marca
              </label>
              <input
                class="w-full p-3 border border-solid border-light-second rounded-md mt-2 mb-4 resize-y text-white bg-dark-primary hover:border-primary"
                type="text"
                id="newBrandCar"
                name="newBrandCar"
                placeholder="Datsun"
              />
            </div>

            <div>
              <label
                class="text-light-primary text-lg font-medium"
                for="newImgBrandCar"
              >
                Imagen
              </label>
              <input
                class="w-full p-3 border border-solid border-light-second rounded-md mt-2 mb-4 resize-y text-white bg-dark-primary hover:border-primary"
                type="text"
                id="newImgBrandCar"
                name="newImgBrandCar"
                placeholder="Datsun Logo"
              />
            </div>
            <div>
              <label
                class="text-light-primary text-lg font-medium"
                for="newCountryCar"
              >
                País
              </label>
              <input
                class="w-full p-3 border border-solid border-light-second rounded-md mt-2 mb-4 resize-y text-white bg-dark-primary hover:border-primary"
                type="text"
                id="newCountryCar"
                name="newCountryCar"
                placeholder="Reino Unido"
              />
            </div>

            <div>
              <label
                class="text-light-primary text-lg font-medium"
                for="newFoundationCar"
              >
                Fundado en...
              </label>
              <input
                class="w-full p-3 border border-solid border-light-second rounded-md mt-2 mb-4 resize-y text-white bg-dark-primary hover:border-primary"
                type="number"
                id="newFoundationCar"
                name="newFoundationCar"
                step="1"
                min="1550"
                placeholder="1935"
              />
            </div>
          </div>
        </div>

        <label class="text-light-primary text-lg font-medium" for="modelCar">
          Modelo del coche
        </label>
        <input
          class="w-full p-3 border border-solid border-light-second rounded-md mt-2 mb-4 resize-y text-white bg-dark-second hover:border-primary"
          type="text"
          id="modelCar"
          name="modelCar"
          placeholder="Model X V8"
        />

        <label class="text-light-primary text-lg font-medium" for="yearCar">
          Año del coche
        </label>
        <input
          class="w-full p-3 border border-solid border-light-second rounded-md mt-2 mb-4 resize-y text-white bg-dark-second hover:border-primary"
          type="number"
          id="yearCar"
          name="yearCar"
          step="1"
          min="0"
          placeholder="1998"
        />

        <label class="text-light-primary text-lg font-medium" for="carClasses">
          Clase del coche
        </label>
        <select
          class="w-full p-3 border border-solid border-light-second rounded-md mt-2 mb-4 resize-y text-white bg-dark-second hover:border-primary"
          id="carClasses"
          name="carClasses"
        >
          {
            carClassesData?.map((carClass) => (
              <option value={carClass.id}>{carClass.name}</option>
            ))
          }
          <option value="new">Añadir nueva clase</option>
        </select>

        <!-- Nueva Clase -->
        <div
          id="newClassContainer"
          class="hidden px-2 pt-2 bg-dark-second border border-primary rounded-xl"
        >
          <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
            <div>
              <label
                class="text-light-primary text-lg font-medium"
                for="newClassName"
              >
                Nombre de Clase
              </label>
              <input
                class="w-full p-3 border border-solid border-light-second rounded-md mt-2 mb-4 resize-y text-white bg-dark-primary hover:border-primary"
                type="text"
                id="newClassName"
                name="newClassName"
                placeholder="Gran Turismos X"
              />
            </div>

            <div>
              <label
                class="text-light-primary text-lg font-medium"
                for="newClassShortName"
              >
                Nombre de Clase Corto
              </label>
              <input
                class="w-full p-3 border border-solid border-light-second rounded-md mt-2 mb-4 resize-y text-white bg-dark-primary hover:border-primary"
                type="text"
                id="newClassShortName"
                name="newClassShortName"
                placeholder="GTX"
              />
            </div>

            <div>
              <label
                class="text-light-primary text-lg font-medium"
                for="newClassBackgroundColor"
              >
                Color Fondo de Clase
              </label>
              <input
                class="p-3 border border-solid border-light-second rounded-md mt-2 mb-4 text-white bg-dark-primary hover:border-primary"
                type="color"
                id="newClassBackgroundColor"
                name="newClassBackgroundColor"
                value="#006fba"
              />
            </div>

            <div>
              <label
                class="text-light-primary text-lg font-medium"
                for="newClassTextColor"
              >
                Color Texto de Clase
              </label>
              <input
                class="p-3 border border-solid border-light-second rounded-md mt-2 mb-4 text-white bg-dark-primary hover:border-primary"
                type="color"
                id="newClassTextColor"
                name="newClassTextColor"
                value="#f9f9f9"
              />
            </div>

            <div class="col-span-2">
              <div
                id="classPreview"
                class="mb-2 p-4 rounded-md text-center font-bold w-2/4 mx-auto"
              >
                GTX
              </div>
            </div>
          </div>
        </div>

        <div class="grid grid-cols-1 gap-4 md:grid-cols-2 xl:grid-cols-3">
          <div>
            <label class="text-light-primary text-lg font-medium" for="powerCar">
              Potencia (en CV)
            </label>
            <input
              class="w-full p-3 border border-solid border-light-second rounded-md mt-2 mb-4 resize-y text-white bg-dark-second hover:border-primary"
              type="number"
              id="powerCar"
              name="powerCar"
              step="1"
              min="1"
              placeholder="215"
            />
          </div>
          <div>
            <label class="text-light-primary text-lg font-medium" for="torqueCar">
              Par (en N/m)
            </label>
            <input
              class="w-full p-3 border border-solid border-light-second rounded-md mt-2 mb-4 resize-y text-white bg-dark-second hover:border-primary"
              type="number"
              id="torqueCar"
              name="torqueCar"
              step="1"
              min="1"
              placeholder="150"
            />
          </div>
          <div>
            <label class="text-light-primary text-lg font-medium" for="weightCar">
              Peso (en Kg)
            </label>
            <input
              class="w-full p-3 border border-solid border-light-second rounded-md mt-2 mb-4 resize-y text-white bg-dark-second hover:border-primary"
              type="number"
              id="weightCar"
              name="weightCar"
              step="1"
              min="1"
              placeholder="1250"
            />
          </div>
          <div>
            <label
              class="text-light-primary text-lg font-medium"
              for="tyreTimeChange"
            >
              Cambio de gomas (en segundos)
            </label>
            <input
              class="w-full p-3 border border-solid border-light-second rounded-md mt-2 mb-4 resize-y text-white bg-dark-second hover:border-primary"
              type="number"
              id="tyreTimeChange"
              name="tyreTimeChange"
              step="0.01"
              min="0.01"
              placeholder="0.20"
            />
          </div>
          <div>
            <label
              class="text-light-primary text-lg font-medium"
              for="fuelLiterTime"
            >
              Refuel (seg/litros de combustible)
            </label>
            <input
              class="w-full p-3 border border-solid border-light-second rounded-md mt-2 mb-4 resize-y text-white bg-dark-second hover:border-primary"
              type="number"
              id="fuelLiterTime"
              name="fuelLiterTime"
              step="0.01"
              min="0.01"
              placeholder="1.15"
            />
          </div>
          <div>
            <label class="text-light-primary text-lg font-medium" for="maxFuel">
              Combustible MAX. (en litros)
            </label>
            <input
              class="w-full p-3 border border-solid border-light-second rounded-md mt-2 mb-4 resize-y text-white bg-dark-second hover:border-primary"
              type="number"
              id="maxFuel"
              name="maxFuel"
              step="0.1"
              min="0.1"
              placeholder="100"
            />
          </div>
        </div>
        <label class="text-light-primary text-lg font-medium" for="descriptionCar">
          Descripción breve del coche
        </label>
        <textarea
          class="w-full p-3 border border-solid border-light-second rounded-md mt-2 mb-4 text-white bg-dark-second hover:border-primary max-h-96 min-h-28 resize-y"
          id="descriptionCar"
          name="descriptionCar"
          placeholder="Cualquier descripción adicional del coche"></textarea>

        <input
          class="bg-primary text-white font-bold py-3 px-5 border-solid border-primary border-2 rounded-md hover:bg-dark-second hover:text-light-primary mt-4"
          type="submit"
          value="Subir Coche"
        />
      </form>
    </div>
  </div>
</Layout>

<style>
  tbody tr:nth-child(odd) {
    background-color: #0f0f0f;
  }

  tbody tr:nth-child(even) {
    background-color: #19191c;
  }
</style>

<script>
  import {
    initCarManagement,
    initDeleteCarButtons,
  } from "@/lib/admin/cars/carManagment";

  document.addEventListener("astro:page-load", () => {
    initCarManagement();
    initDeleteCarButtons();
    initCarForm();
    initColorPickers();
  });

  function initCarForm() {
    const CarForm = document.getElementById("uploadForm");
    const carBrandSelect = document.getElementById("carbrand");
    const carClassSelect = document.getElementById("carClasses");
    const newBrandContainer = document.getElementById("newBrandContainer");
    const newClassContainer = document.getElementById("newClassContainer");

    carBrandSelect?.addEventListener("change", (e) => {
      const target = e.target as HTMLSelectElement;
      if (target && target.value === "new") {
        newBrandContainer?.classList.remove("hidden");
      } else {
        newBrandContainer?.classList.add("hidden");
      }
    });

    carClassSelect?.addEventListener("change", (e) => {
      const target = e.target as HTMLSelectElement;
      if (target && target.value === "new") {
        newClassContainer?.classList.remove("hidden");
      } else {
        newClassContainer?.classList.add("hidden");
      }
    });
  }

  function initColorPickers() {
    const backgroundColorPicker = document.getElementById(
      "newClassBackgroundColor"
    ) as HTMLInputElement;
    const textColorPicker = document.getElementById(
      "newClassTextColor"
    ) as HTMLInputElement;
    const backgroundColorCode = document.getElementById("backgroundColorCode");
    const textColorCode = document.getElementById("textColorCode");
    const classPreview = document.getElementById("classPreview");
    const shortNameInput = document.getElementById(
      "newClassShortName"
    ) as HTMLInputElement;

    function updatePreview() {
      if (backgroundColorCode)
        backgroundColorCode.textContent = backgroundColorPicker.value;
      if (textColorCode) textColorCode.textContent = textColorPicker.value;
      if (classPreview) {
        classPreview.style.backgroundColor = backgroundColorPicker.value;
        classPreview.style.color = textColorPicker.value;
        classPreview.textContent = shortNameInput.value || "GTX";
      }
    }

    backgroundColorPicker.addEventListener("input", updatePreview);
    textColorPicker.addEventListener("input", updatePreview);
    shortNameInput.addEventListener("input", updatePreview);

    // Inicializar la vista previa
    updatePreview();
  }
</script>
