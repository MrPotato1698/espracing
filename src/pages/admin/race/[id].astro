---
import Layout from "@/layouts/ProfileLayout.astro";
import { supabase } from "@/db/supabase";

const { id } = Astro.params;
const { cookies, redirect } = Astro;

if (!id) {
  return redirect("/admin/adminraces");
}

const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");

if (!accessToken || !refreshToken) {
  return redirect("/login");
}

// Set the session with the cookies
const { data: dataAuth, error: errorAuth } = await supabase.auth.setSession({
  refresh_token: refreshToken.value,
  access_token: accessToken.value,
});

// If there is an error, delete the cookies and redirect to login
if (errorAuth) {
  cookies.delete("sb-access-token", {
    path: "/",
  });
  cookies.delete("sb-refresh-token", {
    path: "/",
  });

  return redirect("/login");
}

const idAuth = dataAuth?.user?.id || "";

const { data: roleData } = await supabase
  .from("profiles")
  .select("roleesp")
  .eq("id", idAuth)
  .single();

if (roleData?.roleesp !== 1) {
  return redirect("/index");
}

const { data: raceData, error: errorRaceData } = await supabase
  .from("race")
  .select("name, orderinchamp, championship!inner(name), pointsystem!inner(name)")
  .eq('id', id)
  .single();

const { data: champsData } = await supabase
  .from("championship")
  .select("id, name")
  .order("id", { ascending: true });

const { data: pointsystemData } = await supabase
  .from("pointsystem")
  .select("id, name")
  .order("id", { ascending: true });
---

<Layout title="ESP Racing: Modificación datos de carrera">
  <h2 class="text-5xl font-bold border-b border-[#da392b] w-fit mx-auto">
    Modificar Perfil de Equipo
  </h2>
  <form
    id="editRaceForm"
    class="flex flex-col mt-5"
  >
    <label class="mt-5 text-lg font-semibold" for="name">
      Nombre de Carrera:
    </label>
    <input
      type="text"
      name="name"
      value={raceData?.name}
      class="bg-[#19191c] text-[#f9f9f9] text-lg w-11/12 border-none rounded-md p-2 ml-1 mt-px"
    />

    <label class="mt-5 text-lg font-semibold" for="orderChamp">
      Orden en el campeonato:
    </label>
    <input
      type="text"
      name="orderChamp"
      value={raceData?.orderinchamp}
      class="bg-[#19191c] text-[#f9f9f9] text-lg w-11/12 border-none rounded-md p-2 ml-1 mt-px"
    />

    <label class="mt-5 text-lg font-semibold" for="champID">
      Campeonato al que pertenece (antiguo:  {raceData?.championship.name}):
    </label>
    <select
      class="w-full p-3 border border-solid border-[#f7f7f7] rounded-md mt-2 mb-4 resize-y text-white bg-[#19191c] hover:border-[#da392b]"
      id="champID"
      name="champID"
    >
      {
        champsData?.map((champ) => (
          <option value={champ.id?.toString()}>{champ.name}</option>
        ))
      }
    </select>

    <label class="mt-5 text-lg font-semibold" for="pointsystem">
      Sistema de Puntuación (antiguo:  {raceData?.pointsystem.name}):
    </label>
    <select
      class="w-full p-3 border border-solid border-[#f7f7f7] rounded-md mt-2 mb-4 resize-y text-white bg-[#19191c] hover:border-[#da392b]"
      id="pointsystem"
      name="pointsystem"
    >
      {
        pointsystemData?.map((ps) => (
          <option value={ps.id?.toString()}>{ps.name}</option>
        ))
      }
      <option value="0">Evento / Sin Puntuación</option>
    </select>

    <div class="mb-4">
      <label for="fileInput" class="block text-[#f9f9f9] text-sm font-bold mb-2">
        Selecciona el archivo JSON de la carrera si desea modificarlo
      </label>
      <input
        type="file"
        id="fileInput"
        name="fileInput"
        accept=".json"
        class="block w-full text-sm text-[#f9f9f9] file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-[#da392b] file:text-white hover:file:bg-[#b32d22]"
      />
    </div>
    <div id="fileInfo" class="mb-4 hidden">
      <p class="text-sm text-[#f9f9f9]">
        Archivo seleccionado: <span id="fileName"></span>
      </p>
    </div>

    <input type="hidden" name="race_id" value={id} />

    <div>
      <button
        type="submit"
        class="py-1.5 px-3 w-fit mr-2 bg-[#0f0f0f] text-white border-[#29dd38] border-2 rounded-md my-4 font-medium text-lg hover:bg-[#29dd38] hover:text-[#0f0f0f]"
      >
        Aceptar
      </button>

      <button
        onclick="window, location.href = '/admin/adminraces'"
        class="py-1.5 px-3 w-fit bg-[#0f0f0f] text-white border-[#da392b] border-2 rounded-md my-4 font-medium text-lg hover:bg-[#da392b] hover:text-[#0f0f0f]"
      >
        Cancelar
      </button>
    </div>
  </form>
</Layout>

<script>
  const form = document.getElementById('editRaceForm') as HTMLFormElement;
  const fileInput = document.getElementById('fileInput') as HTMLInputElement;
  const fileInfo = document.getElementById('fileInfo') as HTMLDivElement;
  const fileName = document.getElementById('fileName') as HTMLSpanElement;

  fileInput.addEventListener('change', () => {
    const file = fileInput.files?.[0];
    if (file) {
      if (file.type === "application/json") {
        fileName.textContent = file.name;
        fileInfo.classList.remove("hidden");
      } else {
        alert("Por favor, selecciona un archivo JSON válido.");
        fileInput.value = "";
        fileInfo.classList.add("hidden");
      }
    } else {
      fileInfo.classList.add("hidden");
    }
  });

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(form);

    try {
      const response = await fetch('/api/admin/race/editrace', {
        method: 'POST',
        body: formData,
      });

      if (!response.ok) {
        throw new Error('Error en la respuesta del servidor');
      }

      const result = await response.json();

      if (result.success) {
        alert('Carrera actualizada con éxito');
        window.location.href = '/admin/adminraces';
      } else {
        throw new Error(result.error || 'Error desconocido');
      }
    } catch (error) {
      console.error('Error al actualizar la carrera:', error);
      alert('Hubo un error al actualizar la carrera. Por favor, inténtalo de nuevo.');
    }
  });
</script>