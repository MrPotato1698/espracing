---
import Layout from "@/layouts/ProfileLayout.astro";
import { supabase } from "@/db/supabase";
import CarBrandImageUpload from "@/components/CarBrandImageUpload";

const { id } = Astro.params;
const { cookies, redirect } = Astro;

if (!id) {
  return redirect("/admin/adminglobal");
}

const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");

if (!accessToken || !refreshToken) {
  return redirect("/login");
}

// Set the session with the cookies
const { data: dataAuth, error: errorAuth } = await supabase.auth.setSession({
  refresh_token: refreshToken.value,
  access_token: accessToken.value,
});

// If there is an error, delete the cookies and redirect to login
if (errorAuth) {
  cookies.delete("sb-access-token", {
    path: "/",
  });
  cookies.delete("sb-refresh-token", {
    path: "/",
  });

  return redirect("/login");
}

const idAuth = dataAuth?.user?.id || "";

const { data: roleData } = await supabase
  .from("profiles")
  .select("roleesp")
  .eq("id", idAuth)
  .single();

if (roleData == null || roleData.roleesp == null || roleData.roleesp > 1) {
  return redirect("/index");
}

const { data: brandData } = await supabase
  .from("carbrand")
  .select("*")
  .eq("id", parseInt(id))
  .single();
---

<Layout title="ESP Racing: Modificación datos de marca">
  <h2 class="text-5xl font-bold border-b border-primary w-fit mx-auto">
    Modificar Datos de Marca
  </h2>
  <form id="editBrandForm" class="flex flex-col mt-5">
    <label class="mt-5 text-lg font-semibold" for="name">
      Nombre de la Marca:
    </label>
    <input
      type="text"
      name="name"
      value={brandData?.name}
      class="bg-darkSecond text-lightPrimary text-lg w-11/12 border-none rounded-md p-2 ml-1 mt-px"
      required
    />

    <label class="mt-5 text-lg font-semibold" for="location">
      País de Origen:
    </label>
    <input
      type="text"
      name="location"
      value={brandData?.location}
      placeholder="Italia"
      class="bg-darkSecond text-lightPrimary text-lg w-11/12 border-none rounded-md p-2 ml-1 mt-px"
    />

    <label class="mt-5 text-lg font-semibold" for="foundation">
      Año de Fundación:
    </label>
    <input
      type="number"
      name="foundation"
      value={brandData?.foundation}
      placeholder="1947"
      min="1800"
      max={new Date().getFullYear()}
      class="bg-darkSecond text-lightPrimary text-lg w-11/12 border-none rounded-md p-2 ml-1 mt-px"
    />

    <input type="hidden" name="brand_id" value={id} />

    <div>
      <button
        type="submit"
        class="py-1.5 px-3 w-fit mr-2 bg-darkPrimary text-white border-[#29dd38] border-2 rounded-md my-4 font-medium text-lg hover:bg-[#29dd38] hover:text-darkPrimary"
      >
        Aceptar
      </button>

      <button
        type="button"
        onclick="window.location.href = '/admin/adminglobal'"
        class="py-1.5 px-3 w-fit bg-darkPrimary text-white border-primary border-2 rounded-md my-4 font-medium text-lg hover:bg-primary hover:text-darkPrimary"
      >
        Cancelar
      </button>
    </div>
  </form>
  <div class="w-11/12">
    <CarBrandImageUpload
      client:load
      brandId={parseInt(id || "0")}
      currentImageUrl={brandData?.imgbrand || ""}
      onUploadComplete={(imageUrl: string) => {
        console.log("Upload complete:", imageUrl)
        return null;
      }}
    />
  </div>
</Layout>

<script>
import { showToast } from "@/lib/utils";

  const form = document.getElementById("editBrandForm") as HTMLFormElement;
  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const formData = new FormData(form);

    try {
      const response = await fetch("/api/admin/carbrand", {
        method: "PUT",
        body: formData,
      });

      if (!response.ok) {
        console.error("Error en la respuesta del servidor:", response.statusText);
        showToast("Error en la respuesta del servidor", "error");
        throw new Error("Error en la respuesta del servidor");
      }

      const result = await response.json();

      if (result.success) {
        showToast("Marca actualizada con éxito", "success");
        window.location.href = "/admin/adminglobal";
      } else {
        console.error("Error al actualizar la marca:", result.error);
        showToast(result.error || "Error desconocido", 'error');
        throw new Error(result.error || "Error desconocido");
      }
    } catch (error) {
      console.error("Error al actualizar la marca:", error);
      showToast("Hubo un error al actualizar la marca. Por favor, inténtalo de nuevo.", 'error');
    }
  });
</script>