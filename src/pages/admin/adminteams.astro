---
import Layout from "@/layouts/ProfileLayout.astro";
import { supabase } from "@/db/supabase";
import Trash from "@/icons/Trash.astro";
import Edit from "@/icons/Edit.astro";

const { cookies, redirect } = Astro;

const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");

if (!accessToken || !refreshToken) {
  return redirect("/login");
}

// Set the session with the cookies
const { data: dataAuth, error: errorAuth } = await supabase.auth.setSession({
  refresh_token: refreshToken.value,
  access_token: accessToken.value,
});

// If there is an error, delete the cookies and redirect to login
if (errorAuth) {
  cookies.delete("sb-access-token", {
    path: "/",
  });
  cookies.delete("sb-refresh-token", {
    path: "/",
  });

  return redirect("/login");
}

const id = dataAuth?.user?.id || "";

const { data: userData } = await supabase
  .from("profiles")
  .select("roleesp")
  .eq("id", id)
  .single();

if (userData?.roleesp !== 1) {
  return redirect("/index");
}

const { data: teamData } = await supabase
  .from("team")
  .select("id, name")
  .order("id", { ascending: true });

let numberOFDrivers: number[] = [];

for (const team of teamData || []) {
  const { data: teamMembers } = await supabase
    .from("profiles")
    .select('*', { count: 'exact', head: false })
    .eq("team", team.id);
  numberOFDrivers.push(teamMembers?.length || 0);
}
---

<Layout title="ESP Racing:  Administrar Carreras">
  <h2 class="text-5xl font-extrabold border-b-2 border-primary w-full">
    Administración de Equipos
  </h2>

  <div class="py-4 mx-auto text-center" style="width: 99%">
    <p class="text-5xl font-bold border-b border-primary w-fit mx-auto">
      Lista de Equipos del Sistema
    </p>
    <table class="mt-6 w-full border-collapse border border-light-primary">
      <thead class="font-medium bg-primary">
        <tr>
          <th>Nº</th>
          <th>Nombre</th>
          <th>Nº Pilotos</th>
          <th>Editar</th>
          <th>Eliminar</th>
        </tr>
      </thead>
      <tbody>
        {
          teamData?.map((team, index) => (
            <tr>
              <td class="font-semibold">{index + 1}</td>
              <td>{team.name}</td>
              <td>{numberOFDrivers[index]}</td>
              <td>
                <a href={`/admin/teams/${team.id}`}>
                  <Edit moreClass="w-6 text-center mx-auto" />
                </a>
              </td>
              <td>
                <button class="align-middle delete-team" data-id={team.id}>
                  <Trash moreClass="w-6 text-center mx-auto" />
                </button>
              </td>
            </tr>
          ))
        }
      </tbody>
    </table>
  </div>

</Layout>

<style>
  tbody tr:nth-child(odd) {
    background-color: #0f0f0f;
  }

  tbody tr:nth-child(even) {
    background-color: #19191c;
  }
</style>

<script>
  document.addEventListener("astro:page-load", () => {
    const deleteRaceButtons = document.querySelectorAll(".delete-team");

  deleteRaceButtons.forEach((button) => {
    button.addEventListener("click", async (e) => {
      e.preventDefault();
      const id = button.getAttribute("data-id");

      if (confirm("¿Estás seguro de que quieres eliminar este equipo?")) {
        try {
          const response = await fetch("/api/admin/team/deleteteam", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ id }),
          });

          if (response.ok) {
            const closestTr = button.closest("tr");
            if (closestTr) {
              closestTr.remove();
            }
            window.location.reload();
          } else {
            console.error("Error eliminando equipo");
          }
        } catch (error) {
          console.error("Error:", error);
        }
      }
    });
  });
  });
</script>
