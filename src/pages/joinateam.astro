---
import Layout from "@/layouts/ProfileLayout.astro";
import { supabase } from "@/db/supabase";

const { cookies, redirect } = Astro;

const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");

if (!accessToken || !refreshToken) {
  return redirect("/login");
}

// Set the session with the cookies
const { data: dataAuth, error: errorAuth } = await supabase.auth.setSession({
  refresh_token: refreshToken.value,
  access_token: accessToken.value,
});

// If there is an error, delete the cookies and redirect to login
if (errorAuth) {
  cookies.delete("sb-access-token", {
    path: "/",
  });
  cookies.delete("sb-refresh-token", {
    path: "/",
  });

  return redirect("/login");
}

const idAuth = dataAuth?.user?.id || "";

const {data: TeamData} = await supabase
  .from("team")
  .select("name, description, image, id, profiles!inner(id)")
  .eq("profiles.id", idAuth)
  .single();

if(TeamData !== null && TeamData !== undefined) {
  return redirect("/myteam");
}

const {data: TeamRequestData} = await supabase
  .from("teamsapplication")
  .select("team!inner(name)")
  .eq("user_application", idAuth)
  .single();

const RequestData: Boolean = TeamRequestData !== null ? true : false;

const {data: TeamsData} = await supabase
  .from("team")
  .select("name, description, image, id, profiles(count)");
---

<Layout title = "ESP Racing: Unirse a un equipo">
  <div class="py-4 mx-auto text-center" style="width: 99%">
    <p class="text-5xl font-bold border-b border-primary w-fit mx-auto"
      >Unirse a un equipo</p
    >
    <table class="mt-6 w-full border-collapse border border-light-primary">
      <thead class="font-medium bg-primary">
        <tr>
          <th>Nº</th>
          <th colspan="2">Nombre</th>
          <th>Nº Pilotos</th>
          <th>Descripción</th>
        </tr>
      </thead>
      <tbody>
        {
          TeamsData?.map((team, index) =>
            <tr class="bg-dark-primary">
              <td class = "font-semibold">{index + 1}</td>
              <td><img src={String(team.image)} alt="Avatar" class="w-8 py-1"/></td>
              <td>{team.name}</td>
              <td>{team.profiles[0].count}</td>
              <td>{team.description}</td>
            </tr>
          )
        }
      </tbody>
    </table>
  </div>
  {
  RequestData ?
  (
    <p class="text-4xl font-bold border-b border-primary w-fit mx-auto mb-2">
      Selecciona un equipo al que quiera unirse
    </p>
    <p class = "text-xl font-medium w-fit mx-auto mt-10">
      Esperando que se acepte la solicitud para el ingreso en el equipo {TeamRequestData?.team.name} ...
    </p>

  ):(

    <p class="text-4xl font-bold border-b border-primary w-fit mx-auto mb-2">
    Selecciona un equipo al que quiera unirse
    </p>

    <form action = "/api/teams/getInsideTeam"
      method = "post"
      class = "grid grid-flow-col"
    >
      <select
      id="select-team"
      name="select_team"
      class="block m-auto w-4/5 px-4 py-3 mt-2 text-lg font-medium rounded-xl pe-9 focus:border-primary disabled:opacity-50 disabled:pointer-events-none bg-dark-second border-neutral-700 text-light-primary placeholder-neutral-500"
      >
        {
          TeamsData?.map((team) => (
            <option value={team.id?.toString()}>{team.name}</option>
          ))
        }
      </select>
      <input type="hidden" name="user_id" value={idAuth}>
      <button
        class="cargarselector no-underline bg-dark-second rounded-xl my-4 font-medium text-light-primary text-lg py-4 px-8 block mx-auto mt-2"
        id="btnCargarTabla"
        type="submit"
      >
        Enviar solicitud
      </button>
    </form>
    )}

</Layout>