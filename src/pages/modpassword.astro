---
import Layout from "@/layouts/NormalLayout.astro";
import { supabase } from "@/db/supabase";
---

<Layout title="ESP Racing: Modificar Contraseña">
  <h2 class="text-5xl font-bold border-b border-[#da392b] w-fit mx-auto mt-5">
    Actualizar contraseña de Usuario
  </h2>
  <!-- action={resetPass}  (dentro del form)-->
  <form id="passForm" class="flex flex-col mt-5 mx-auto" method="POST">
    <label class="mt-5 ml-3 text-lg font-semibold" for="new_pass">
      Contraseña Nueva
    </label>
    <input
      type="password"
      id="new_pass"
      name="new_pass"
      required
      class="ml-3 bg-[#19191c] text-[#f9f9f9] text-lg border-none rounded-md p-2 mt-px"
      style="width: 98%"
    />

    <label class="mt-5 ml-3 text-lg font-semibold" for="repeat_new_pass">
      Repetir Contraseña
    </label>
    <input
      type="password"
      id="repeat_new_pass"
      name="repeat_new_pass"
      required
      class="ml-3 bg-[#19191c] text-[#f9f9f9] text-lg border-none rounded-md p-2 mt-px"
      style="width: 98%"
    />

    <div>
      <button
        type="submit"
        class="ml-3 py-1.5 px-3 w-fit mr-2 bg-[#0f0f0f] text-white border-[#29dd38] border-2 rounded-md my-4 font-medium text-lg hover:bg-[#29dd38] hover:text-[#0f0f0f]"
      >
        Aceptar
      </button>
    </div>
  </form>

  <script>
    function getTokenFromUrl() {
      // Obtener URL completa
      const fullUrl = window.location.href;
      console.log('URL completa:', fullUrl);

      // Obtener fragmento hash
      const hash = window.location.hash;
      console.log('Hash:', hash);

      // Obtener parámetros de búsqueda
      const searchParams = new URLSearchParams(window.location.search);
      console.log('Search params:', Object.fromEntries(searchParams));

      // Intentar obtener token de diferentes fuentes
      const token = 
        searchParams.get('token') || 
        new URLSearchParams(hash.slice(1)).get('access_token');
      
      console.log('Token encontrado:', token);
      return token;
    }

    const form = document.getElementById("passForm");
    const accessToken = getTokenFromUrl();

    if (form) {
      form.addEventListener("submit", async (e) => {
        e.preventDefault();

        const newPass = (document.getElementById("new_pass") as HTMLInputElement).value;
        const repeatPass = (document.getElementById("repeat_new_pass") as HTMLInputElement).value;

        if (newPass !== repeatPass) {
          alert("Las contraseñas no coinciden");
          return;
        }

        try {
          const response = await fetch("/api/auth/modpassword", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              access_token: accessToken,
              new_password: newPass,
            }),
          });

          if (!response.ok) throw new Error("Error al actualizar contraseña");

          alert("Contraseña actualizada correctamente");
          window.location.href = "/login";
        } catch (error) {
          console.error("Error:", error);
          alert("Error al actualizar la contraseña");
        }
      });
    }
  </script>
</Layout>
