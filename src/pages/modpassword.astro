---
import Layout from "@/layouts/NormalLayout.astro";
import OpenEye from "@/icons/OpenEye.astro";
import CloseEye from "@/icons/CloseEye.astro";
---

<Layout title="ESP Racing: Modificar Contraseña">
  <div
    class="absolute bottom-0 left-0 w-full h-full overflow-hidden leading-5 bg-[#f0f0f0] top-72 -z-10 bg-gradient-to-b from-primary via-primary to-darkPrimary"
  >
  </div>

  <div
    class="relative justify-center min-h-screen bg-transparent shadow-xl sm:flex sm:flex-row rounded-3xl"
  >
    <div
      class="z-10 flex flex-col self-center lg:px-14 sm:max-w-4xl xl:max-w-md"
    >
      <div class="flex-col self-start hidden text-lightPrimary lg:flex">
        <h1 class="my-3 text-4xl font-semibold">Modifica tu contraseña</h1>
        <p class="pr-3 text-sm opacity-90">
          Modifica tu contraseña. Recuerda hacerla robusta y segura, y lo importante, que te acuerdes de ella.
          Algunos consejos para hacerla más segura:
          <ul class= "list-disc pr-3, text-sm opacity-90 pl-4 mt-1">
            <li>Utiliza al menos 8 caracteres</li>
            <li>Utiliza mayúsculas y minúsculas</li>
            <li>Utiliza números y caracteres especiales</li>
          </ul>
        </p>
      </div>
    </div>

    <form
      id="passForm"
      method="post"
      class="z-10 flex self-center justify-center"
      data-astro-reload
    >
      <div class="p-12 mx-auto bg-lightPrimary rounded-3xl w-96">
        <div class="mb-7">
          <h3 class="text-2xl font-semibold text-gray-800">Formulario Nueva Contraseña</h3>
          </p>
        </div>
        <div class="space-y-6">

          <div class="relative" x-data="{ show: true }">
            <input
              :type="show ? 'password' : 'text'"
              name="new_pass"
              id="new_pass"
              class="w-full px-4 py-3 text-sm text-darkPrimary bg-gray-200 border border-gray-200 rounded-lg focus:bg-gray-100 focus:outline-none focus:border-darkPrimary focus:text-darkSecond"
              placeholder="Nueva Contraseña"
            />
            <div
              class="absolute inset-y-0 right-0 flex items-center mr-3 text-sm leading-5"
            >
              <OpenEye />
              <CloseEye />
            </div>
          </div>

          <div class="relative" x-data="{ show: true }">
            <input
              :type="show ? 'password' : 'text'"
              name="repeat_new_pass"
              id="repeat_new_pass"
              class="w-full px-4 py-3 text-sm text-darkPrimary bg-gray-200 border border-gray-200 rounded-lg focus:bg-gray-100 focus:outline-none focus:border-darkPrimary focus:text-darkSecond"
              placeholder="Repetir Contraseña"
            />
            <div
              class="absolute inset-y-0 right-0 flex items-center mr-3 text-sm leading-5"
            >
              <OpenEye />
              <CloseEye />
            </div>
          </div>

          <button
            type="submit"
            class="flex justify-center w-full p-3 font-semibold tracking-wide text-gray-100 transition duration-300 ease-in bg-primary border-2 border-lightPrimary rounded-lg cursor-pointer hover:border-primary hover:bg-lightPrimary hover:text-primary"
          >
            Cambiar Contraseña
          </button>
        </div>
      </div>
    </form>
  </div>

  <script
  is:inline
  data-astro-rerun
  src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.js"
></script>

  <script>
    function getTokenFromUrl() {
      // Obtener URL completa
      const fullUrl = window.location.href;
      console.log('URL completa:', fullUrl);

      // Obtener fragmento hash
      const hash = window.location.hash;
      console.log('Hash:', hash);

      // Obtener parámetros de búsqueda
      const searchParams = new URLSearchParams(window.location.search);
      console.log('Search params:', Object.fromEntries(searchParams));

      // Intentar obtener token de diferentes fuentes
      const token =
        searchParams.get('token') ||
        new URLSearchParams(hash.slice(1)).get('access_token');

      console.log('Token encontrado:', token);
      return token;
    }

    const form = document.getElementById("passForm");
    const accessToken = getTokenFromUrl();

    if (form) {
      form.addEventListener("submit", async (e) => {
        e.preventDefault();

        const newPass = (document.getElementById("new_pass") as HTMLInputElement).value;
        const repeatPass = (document.getElementById("repeat_new_pass") as HTMLInputElement).value;

        if (newPass !== repeatPass) {
          alert("Las contraseñas no coinciden");
          return;
        }

        try {
          const response = await fetch("/api/auth/modpassword", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              access_token: accessToken,
              new_password: newPass,
            }),
          });

          if (!response.ok) throw new Error("Error al actualizar contraseña");

          alert("Contraseña actualizada correctamente");
          window.location.href = "/login";
        } catch (error) {
          console.error("Error:", error);
          alert("Error al actualizar la contraseña");
        }
      });
    }
  </script>



</Layout>
