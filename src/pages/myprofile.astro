---
import Layout from "@/layouts/ProfileLayout.astro";
import ButtonProfiles from "@/components/ButtonProfiles.astro";
import { supabase } from "@/db/supabase";
import type { QueryResult, QueryData, QueryError } from "@supabase/supabase-js";
import { type Database } from "@/types/supabase";
import { turso } from "@/turso";
import { circuitlayouts } from "@/consts/circuitlayouts";

import { db } from "@/db/drizzle-ormConecction";
import { circuit } from "@/db/schema/circuit";

const { cookies, redirect } = Astro;

const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");

if (!accessToken || !refreshToken) {
  return redirect("/login");
}

// Set the session with the cookies
const { data: dataAuth, error: errorAuth } = await supabase.auth.setSession({
  refresh_token: refreshToken.value,
  access_token: accessToken.value,
});

// If there is an error, delete the cookies and redirect to login
if (errorAuth) {
  cookies.delete("sb-access-token", {
    path: "/",
  });
  cookies.delete("sb-refresh-token", {
    path: "/",
  });

  return redirect("/login");
}

const id = dataAuth?.user?.id || "";
const email = dataAuth?.user?.email || "";

// Asign ID to user in Turso if it doesn't exist
const emailSearchQuery = await turso.execute({
  sql: "SELECT id FROM User WHERE email = ?",
  args: [email],
});

const idSearch = emailSearchQuery.rows[0].email;

if (idSearch === undefined || idSearch === null) {
  const transaction = await turso.transaction("write");
  await transaction.execute({
    sql: "UPDATE User SET id = ? WHERE email = ?",
    args: [id, email],
  });
  await transaction.commit();
}

// Get user data
const { rows: userData } = await turso.execute({
  sql: "SELECT * FROM User WHERE id = ?",
  args: [id],
});

//Integración unica con Supabase (Para evitar usar Turso)

const { data: circuitData, error: circuitError } = await supabase.from("team").select('*');

if (circuitError) {
  console.error("Error fetching circuit data:", circuitError);
  console.log("Datos de Usuario: " + dataAuth.user?.role);
} else if (circuitData && circuitData.length > 0) {
  console.log("Circuito Final: " + circuitData[0].name);
  console.log("Datos de Usuario: " + dataAuth.user?.role);
}


// const { data: userData, error: errorUserData } = await supabase
//   .from('profiles')
//   .select('id, email, full_name, steam_id, avatar, races, poles, wins, podiums, top5, top10, flaps, dnf')
//   .eq('id', id)
//   .single();

// console.log("UserData: "+userData);

// if(errorUserData || userData === null) {
//   return redirect("/faq");
// }

// console.log ("User ID:", id);
// console.log ("User Data:", userData);
// console.log ("Circuit Data:", circuit);

// const teamID = userData?.team;

// const { data: TeamData, error: errorTeamData } = await supabase
//   .from('profiles')
//   .select('team!inner(name)')
//   .eq('id', teamID);

const { rows: TeamData } = await turso.execute({
  sql: "SELECT T.name FROM User AS U INNER JOIN Team AS T WHERE U.id = ? AND U.team = T.id",
  args: [id],
});
---

<Layout title="ESP Racing: Mi Perfil">
  <h2 class="text-5xl font-extrabold border-b-2 border-[#da392b] w-full">
    Mi Perfil
  </h2>

  <img
    src={String(userData[0].image)}
    alt="Avatar"
    class="w-20 mt-5 rounded-full"
  />
  <div class="grid w-11/12 grid-cols-1 my-5 lg:grid-cols-2 xl:grid-cols-3">
    <div class="mb-2">
      <h3 class="text-4xl font-semibold border-b-2 border-[#da392b] w-3/4">
        Nombre
      </h3>
      <p class="pl-2 text-2xl font-medium">{userData[0].name}</p>
    </div>

    <div class="blockdata">
      <h3 class="text-4xl font-semibold border-b-2 border-[#da392b] w-3/4">
        Steam ID
      </h3>
      <p class="pl-2 text-2xl font-medium">{userData[0].steam_id}</p>
    </div>

    {
      TeamData[0]?.name === null ||
      TeamData[0]?.name === undefined ||
      TeamData[0]?.name === "" ? (
        <div class="blockdata">
          <h3 class="text-4xl font-semibold border-b-2 border-[#da392b] w-3/4">
            Equipo
          </h3>
          <p class="pl-2 text-2xl font-medium">Sin Equipo</p>
        </div>
      ) : (
        <div class="blockdata">
          <h3 class="text-4xl font-semibold border-b-2 border-[#da392b] w-3/4">
            Equipo
          </h3>
          <p class="pl-2 text-2xl font-medium">{TeamData[0].name}</p>
        </div>
      )
    }
  </div>

  <h2 class="text-5xl font-extrabold border-b-2 border-[#da392b] w-full mt-12">
    Estadisticas de Carrera
  </h2>
  <div class="grid w-11/12 grid-cols-1 my-5 lg:grid-cols-2 xl:grid-cols-3">
    <div class="blockdata">
      <h3 class="text-4xl font-semibold border-b-2 border-[#da392b] w-3/4">
        Carreras
      </h3>
      <p class="pl-2 text-2xl font-medium">{userData[0].races}</p>
    </div>

    <div class="blockdata">
      <h3 class="text-4xl font-semibold border-b-2 border-[#da392b] w-3/4">
        Victorias
      </h3>
      <p class="pl-2 text-2xl font-medium">{userData[0].wins}</p>
    </div>

    <div class="blockdata">
      <h3 class="text-4xl font-semibold border-b-2 border-[#da392b] w-3/4">
        Podios
      </h3>
      <p class="pl-2 text-2xl font-medium">{userData[0].podiums}</p>
    </div>

    <div class="blockdata">
      <h3 class="text-4xl font-semibold border-b-2 border-[#da392b] w-3/4">
        Top 5
      </h3>
      <p class="pl-2 text-2xl font-medium">{userData[0].top5}</p>
    </div>

    <div class="blockdata">
      <h3 class="text-4xl font-semibold border-b-2 border-[#da392b] w-3/4">
        Top 10
      </h3>
      <p class="pl-2 text-2xl font-medium">{userData[0].top10}</p>
    </div>

    <div class="blockdata">
      <h3 class="text-4xl font-semibold border-b-2 border-[#da392b] w-3/4">
        Vueltas Rápidas
      </h3>
      <p class="pl-2 text-2xl font-medium">{userData[0].flaps}</p>
    </div>

    <div class="blockdata">
      <h3 class="text-4xl font-semibold border-b-2 border-[#da392b] w-3/4">
        DNF
      </h3>
      <p class="pl-2 text-2xl font-medium">{userData[0].dnf}</p>
    </div>
  </div>

  <div class="grid grid-flow-col mt-8">
    <a
      href="/modprofile"
      class="py-1.5 px-2 w-fit bg-[#0f0f0f] text-white border-[#da392b] border-2 rounded-md font-medium text-lg hover:bg-[#19191c]"
      >Modificar Perfil</a
    >
  </div>
</Layout>
