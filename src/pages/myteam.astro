---
import Layout from "@/layouts/ProfileLayout.astro";
import { supabase } from "@/db/supabase";

const { cookies, redirect } = Astro;

const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");

if (!accessToken || !refreshToken) {
  return redirect("/login");
}

// Set the session with the cookies
const { data: dataAuth, error: errorAuth } = await supabase.auth.setSession({
  refresh_token: refreshToken.value,
  access_token: accessToken.value,
});

// If there is an error, delete the cookies and redirect to login
if (errorAuth) {
  cookies.delete("sb-access-token", {
    path: "/",
  });
  cookies.delete("sb-refresh-token", {
    path: "/",
  });

  return redirect("/login");
}

const id = dataAuth?.user?.id || "";

const {data: roleData} = await supabase
  .from("profiles")
  .select("roleesp")
  .eq("id", id)
  .single();


const {data: TeamData} = await supabase
  .from("team")
  .select("name, description, image, id, profiles!inner(id)")
  .eq("profiles.id", id)
  .single();

let idTeam;

if (TeamData === null || TeamData === undefined) {
  return redirect("/joinateam");
} else {
  idTeam = TeamData.id;
}

const {data: TeamUsersData} = await supabase
  .from("profiles")
  .select("full_name, races, wins, top5, top10, avatar, number_plate, poles, podiums")
  .eq("team", idTeam);

---

<Layout title="ESP Racing: Mi Equipo">
  <h2 class="text-5xl font-extrabold border-b-2 border-primary w-full">
    Mi Equipo
  </h2>

  <img src={String(TeamData.image)} alt="Avatar" class="w-20 pt-5" />
  <div class="grid w-11/12 grid-cols-1 my-5">
    <div class="mb-2">
      <h3 class="text-4xl font-semibold border-b-2 border-primary w-3/4">
        Nombre
      </h3>
      <p class="pl-2 text-2xl font-medium">{TeamData.name}</p>
    </div>

    <h2 class="w-full mt-12 text-5xl font-extrabold"></h2>
    <div class="grid w-11/12 grid-cols-1 my-5">
      <div class="blockdata">
        <h3 class="text-4xl font-semibold border-b-2 border-primary w-3/4">
          Descripción
        </h3>
        <p class="pl-2 text-2xl font-medium">{TeamData.description}</p>
      </div>
    </div>

    <div class="py-4 mx-auto text-center" style="width: 99%">
      <p2 class="text-5xl font-bold border-b border-primary w-fit mx-auto"
        >Tabla de Pilotos</p2
      >
      <table class="mt-6 w-full border-collapse border border-light-primary">
        <thead class="font-medium bg-primary">
          <tr>
            <th>Nº</th>
            <th>Nombre</th>
            <th>Carreras</th>
            <th>Victorias</th>
            <th>Podios</th>
            <th>Poles</th>
            <th>Top 5</th>
            <th>Top 10</th>
          </tr>
        </thead>
        <tbody>
          {
            TeamUsersData?.map((user, index) => (
              <tr class="bg-dark-second">
                <td class="font-semibold">{index + 1}</td>
                {user.number_plate === null || user.number_plate === 0 ? (
                  <td>#0 - {user.full_name}</td>
                ) : (
                  <td>
                    #{user.number_plate} - {user.full_name}
                  </td>
                )}
                <td>{user.races}</td>
                <td>{user.wins}</td>
                <td>{user.podiums}</td>
                <td>{user.poles}</td>
                <td>{user.top5}</td>
                <td>{user.top10}</td>
              </tr>
            ))
          }
        </tbody>
      </table>
    </div>

    <div class="grid grid-flow-col mt-8">
      {
        roleData?.roleesp === 1 || roleData?.roleesp === 2 ? (
          <a
            href="/modteamprofile"
            class="py-1.5 px-2 w-fit bg-dark-primary text-light-primary border-primary border-2 rounded-md font-medium text-lg hover:bg-dark-second"
          >
            Modificar Perfil Equipo
          </a>
        ) : null
      }
      <button
        class="exitTeam py-1.5 px-2 w-fit bg-dark-primary text-light-primary border-primary border-2 rounded-md font-medium text-lg hover:bg-dark-second"
        data-id={id}
      >
        Salir del equipo
    </button>
    </div>
  </div>
</Layout>

<script is:inline data-astro-rerun>
  document.addEventListener('astro:page-load', () => {
    const exitTeam = document.querySelectorAll('.exitTeam');

    exitTeam.forEach(button => {
      button.addEventListener('click', async (e) => {
        e.preventDefault();
        const id = button.getAttribute('data-id');

        if (confirm('¿Estás seguro de que quieres salir de este equipo?')) {
          try {
            const response = await fetch('/api/teams/exitFromTeam', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({ id }),
            });

            if (response.ok) {
              // Actualizar UI
              window.location.reload();
            } else {
              console.error('Error saliendo de equipo: ', response);
            }
          } catch (error) {
            console.error('Error:', error);
          }
        }
      });
    });
  });
</script>
