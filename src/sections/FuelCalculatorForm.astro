---
import type { Car } from "@/types/Car";

import { cars } from "@/consts/cars";

const carList: Car[] = cars.map((car) => car).sort((a, b) => a.brand.localeCompare(b.brand));
---

<div class="box-border p-5 m-auto bg-white rounded-md max-w-screen-2xl">
  <form action="" method="post" data-astro-reload>
    <label class="text-[#0f0f0f] text-lg font-medium" for="carname"
      >Eliga coche</label
    >
    <select
      class="w-full p-3 border border-solid border-[#19191c] rounded-md mt-2 mb-4 resize-y text-black bg-white"
      id="carname"
      name="carname"
    >
      {
        carList.map((car) => (
          <option value={car.filename?.toString()}>
            {car.brand} {car.model}
          </option>
        ))
      }
      <option value="othercar">- No está en la lista </option>
    </select>

    <div id="otherCarFuelTank" style="display: none;">
      <label class="text-[#0f0f0f] text-lg font-medium" for="fuelTankCapacity">
        Capacidad del tanque de combustible (en litros)
      </label>
      <input
        class="w-full p-3 border border-solid border-[#19191c] rounded-md mt-2 mb-4 resize-y text-black bg-white"
        type="text"
        id="fuelTankCapacity"
        name="fuelTankCapacity"
        pattern="(?=.*\d)(?=.*[0-9])"
        title="Usa solo números y puntos para los decimales."
        placeholder="ej: 60"
      />
    </div>

    <label class="text-[#0f0f0f] text-lg font-medium" for="fuelConsumption"
      >Consumo del coche por vuelta</label
    >
    <input
      class="w-full p-3 border border-solid border-[#19191c] rounded-md mt-2 mb-4 resize-y text-black bg-white"
      type="text"
      id="fuelConsumption"
      name="fuelConsumption"
      pattern="(?=.*\d)(?=.*[0-9])"
      title="Usa solo números y puntos para los decimales."
      placeholder="ej: 1.32"
    />

    <div class="flex items-center gap-2">
      <label class="relative inline-flex cursor-pointer">
        <input id="switch-2" type="checkbox" class="peer sr-only" />
        <label for="switch-2" class="hidden"></label>
        <div
          class="peer h-4 w-11 rounded-full border bg-slate-200 after:absolute after:-top-1 after:left-0 after:h-6 after:w-6 after:rounded-full after:border after:border-gray-300 after:bg-white after:transition-all after:content-[''] peer-checked:bg-[#da392b] peer-checked:after:translate-x-full peer-focus:ring-[#da392b]"
        >
        </div>
      </label>
      <label class="text-[#0f0f0f] text-lg font-medium" for="switch-2"
        >¿Duración de carrera en tiempo o vueltas?</label
      >
    </div>

    <div id="timeContainer">
      <label class="text-[#0f0f0f] text-lg font-medium" for="racedurationTime"
        >Duración de carrera (en minutos)</label
      >
      <input
        class="w-full p-3 border border-solid border-[#19191c] rounded-md mt-2 mb-4 resize-y text-black bg-white"
        type="text"
        id="racedurationTime"
        name="racedurationTime"
        pattern="(?=.*[0-9])"
        title="Usa solo números."
        placeholder="ej: 90 (1h30)"
      />
    </div>

    <div id="lapsContainer" style="display: none;">
      <label class="text-[#0f0f0f] text-lg font-medium" for="racedurationLaps"
        >Duración de carrera (en vueltas)</label
      >
      <input
        class="w-full p-3 border border-solid border-[#19191c] rounded-md mt-2 mb-4 resize-y text-black bg-white"
        type="text"
        id="racedurationLaps"
        name="racedurationLaps"
        pattern="(?=.*[0-9])"
        title="Usa solo números."
        placeholder="ej: 25"
      />
    </div>

    <label class="text-[#0f0f0f] text-lg font-medium" for="laptime"
      >Tiempo por vuelta (en segundos)</label
    >
    <input
      class="w-full p-3 border border-solid border-[#19191c] rounded-md mt-2 mb-4 resize-y text-black bg-white"
      type="text"
      id="laptime"
      name="laptime"
      pattern="(?=.*\d)(?=.*[0-9])"
      title="Usa solo números y puntos para los decimales."
      placeholder="ej: 95.532 (1:35.532)"
    />

    <input
      class="bg-[#da392b] text-white font-bold py-3 px-5 border-solid border-[#da392b] border-2 rounded-md hover:bg-white hover:text-[#19191c] mt-4"
      type="submit"
      value="Calcular"
    />
  </form>
</div>

<div
  class="mt-3 box-border p-5 m-auto bg-white rounded-md max-w-screen-2xl"
  id="resultadoCalculo"
>
</div>

<script>
  import { initializeFuelFormControls } from "@/lib/fuelForm/fuelFormDOMControl";

  // Inicializar los controles del formulario
  initializeFuelFormControls();

  // Reinicializar los controles del formulario al recargar la página
  document.addEventListener("astro:page-load", initializeFuelFormControls);
</script>
